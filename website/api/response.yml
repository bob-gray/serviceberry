name: Response
type: class
extends: "[EventEmitter](https://nodejs.org/dist/latest/docs/api/events.html#events_class_eventemitter)"
description: |
  This object is created internally by Serviceberry and passed as the second argument to [Handlers](handlers).
  It is a wrapper object around Node's [`http.ServerResponse`](https://nodejs.org/dist/latest/docs/api/http.html#http_class_http_serverresponse).

methods:
- name: clearHeaders
  description: Removes all headers.

- name: getBody
  description: The body prior to serialization.
  returns: any

- name: getContent
  description: The body after serialization.
  returns: string, buffer, or readable stream

- name: getContentType
  description: Content mime type without encoding charset, such as `application/json`.
  returns: a string

- name: getEncoding
  description: Name of encoding such as `utf-8`.
  returns: a string

- name: getHeader
  description: Value is an array when header is duplicated.
  arguments:
  - name: name
    type: string
    description: Case insensitive.
  returns: a string or array

- name: getHeaders
  description: |
    All headers. Names are lower case and values are arrays when names
    are duplicated.
  returns: an object

- name: getStatus
  description: Status code and text if known. May have `code` and/or `text`. May be
    an empty object.
  returns: an object

- name: getStatusCode
  returns: a number or undefined

- name: getStatusText
  returns: a string or undefined

- name: hasHeader
  description: |
    `true` when the header is in the request.
  arguments:
  - name: name
    type: string
    description: Case insensitive.
  returns: a boolean

- name: is
  description: |
    `true` when status matches.
  arguments:
  - name: status
    type: string or number
    description: Status code or standard status text to test against. Case insensitive.
  returns: a boolean

- name: removeHeader
  description: Causes a header not to be sent. Causes `hasHeader` method to return
    `false`.
  arguments:
  - name: name
    description: Case insensitive.
    type: string

- name: send
  description: |
    Sends a response back to the client - ending the request. A response can also be implicity sent when the request proceeds and
    there are no more handlers in the queue.
  arguments:
    - name: options
      type: object
      required: false
      description: |
        Sets response options before finishing request and sending response.
      properties:
        - name: status
          type: number, string or object
          default: 200
          description: |
            Can be a status code, standard status text or an object with properties `code` and `text`. See
            methods [`setStatusCode`](#setstatuscodecode), [`setStatusText`](#setstatustexttext),
            and [`setStatus`](#setstatusstatus).
        - name: headers
          type: object
          required: false
        - name: body
          type: any
          required: false
        - name: content
          type: string, buffer, or readable stream
          required: false
          description: Mutually exclusive with `body` options. Content will not be serialized.
        - name: encoding
          type: string
          default: utf8
        - name: finish
          type: function
          required: false
          description: |
            Listener for `http.ServerResponse`'s `finish` event.

- name: setBody
  description: The body prior to serialization.
  arguments:
  - name: body
    type: any

- name: setContent
  description: Set the content to bypass serialization.
  arguments:
  - name: content
    type: string, buffer, or readable stream

- name: setEncoding
  description: Name of encoding such as `utf-8`.
  arguments:
  - name: encoding
    type: string

- name: setHeader
  arguments:
  - name: name
    type: string
  - name: value
    type: string, number or array

- name: setHeaders
  description: Sets headers from an object. Does **NOT** clear headers. Does
    override headers.
  arguments:
  - name: headers
    type: object

- name: setStatus
  description: |
    When code or text is not provided, an attempt will be made to derive one from
    the other. For example `setStatus(200)` will set status code to `200` and
    status text to `OK` and `setStatus("OK")` will set status text to `OK` and
    status code to `200`.
  arguments:
  - name: status
    type: number, string or object
    properties:
    - name: code
      type: number
    - name: text
      type: string

- name: setStatusCode
  arguments:
  - name: code
    type: number

- name: setStatusText
  arguments:
  - name: text
    type: string

- name: withoutHeader
  description: |
    `true` when the header is **NOT** in the request.
  arguments:
  - name: name
    type: string
    description: Case insensitive.
  returns: a boolean
