name: Trunk
type: class
description: |
  Should be created using [`serviceberry.createTrunk(options)`](serviceberry.html#createtrunk-options).
  All [branches](branch.html) and [leaves](leaf.html) originate from the trunk. Each
  service has only one trunk.
methods:
- name: use
  returns: this trunk
  description: Adds a plugin [handler](handlers.html) to this trunk.
  arguments:
  - name: handler
    type: function or object

- name: catch
  returns: this trunk
  description: Adds an error [handler](handlers.html) to this trunk.
  arguments:
  - name: handler
    type: function or object

- name: at
  returns: new [branch](branch.html)
  description: |
    Routes requests at a path (segment) down a new [branch](branch.html). The path is cumulative.
    Creating a new [branch](branch.html) only requires the next path segment. For example if a branch's
    path is `/widgets` a new [branch](branch.html) created with `.at("{id}")` will have a path of `/widgets/{id}`.

    Path paramaters are delimited using a pair of curly braces. Such as `foo/baz/{id}/`.
    The branch will parse the path parameters. They are available to all handlers through the
    [request](request.html) object's methods [getPathParms](request.html#getpathparams) and
    [getPathParam](request.html#getpathparamname).

  arguments:
  - name: path
    type: string

- name: on
  returns: new [leaf](leaf.html)
  description: Routes requests filtered by options to a new [leaf](leaf.html).
  arguments:
  - name: options
    type: object
    properties:
      - name: method
        type: string or array
        description: HTTP method(s) to handle (`GET`, `POST`...). If not specified or is `*`, all methods are handled.
        required: false
      - name: consumes
        type: string or array
        description: Request content type(s) to handle (application/json, text/xml...). If not specified all request content types are handled.
        required: false
      - name: produces
        type: string or array
        description: Response content type(s) to handle (application/json, text/xml...). If not specified all response content types are handled.
        required: false
      - name: serializers
        type: object
        description: Property names must be content types (such as `application/json`) and values must be [serializer](plugins.html#serializers-and-deserializers) plugins.
      - name: deserializers
        type: object
        description: Property names must be content types (such as `application/json`) and values must be [deserializer](plugins.html#serializers-and-deserializers) plugins.
  - name: handler
    type: function or object
    description: See [Handlers](handlers.html) guide.
    required: false

- name: on
  returns: new [leaf](leaf.html)
  description: Routes requests filtered by method to a new [leaf](leaf.html).
  arguments:
  - name: method
    type: string or array
    description: |
      HTTP method(s) to handle (`GET`, `POST`...). If `*`, all methods are handled.
  - name: handler
    type: function or object
    description: See [Handlers](handlers.html) guide.
    required: false

- name: start
  description: |
    Begin listening for requets. If the trunk was created with the option `autoStart`,
    `start` is called automatically.
  arguments:
  - name: callback
    type: function
    required: false

- name: waitFor
  returns: this branch
  description: |
    A hook for asynchronous setup tasks. The service won't be started until all
    asynchronous setup is complete.
  arguments:
  - name: setup
    type: promise
